<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sviluppo Web on Nim Italia</title><link>https://nim-italia.github.io/web/</link><description>Recent content in Sviluppo Web on Nim Italia</description><generator>Hugo -- gohugo.io</generator><language>it-it</language><lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate><atom:link href="https://nim-italia.github.io/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Nim per il frontend web: componenti Karax</title><link>https://nim-italia.github.io/web/componenti-karax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nim-italia.github.io/web/componenti-karax/</guid><description>Scritto da Andrea Manzini
Abbiamo visto quanto sia semplice con Karax creare delle piccole applicazioni interattive, senza scrivere una riga di Javascript. Nella realtà, la programmazione web è molto più complessa ma possiamo semplificare il processo suddividendo le pagine in componenti indipendenti, che poi verranno assemblati ed &amp;ldquo;usati&amp;rdquo; nella pagina principale.
In questa guida vedremo dunque un semplice componente che modella un &amp;ldquo;orologio&amp;rdquo; autonomo e configurabile dall&amp;rsquo;esterno, insieme ad una semplice applicazione che sfrutta il componente.</description></item><item><title>Nim per il frontend web: introduzione a Karax</title><link>https://nim-italia.github.io/web/introduzione-karax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nim-italia.github.io/web/introduzione-karax/</guid><description>Scritto da Andrea Manzini
introduzione Karax è un web framework che sfrutta il target javascript di Nim e un po&amp;rsquo; come i software più famosi come React, Vue o Angular, ci permette di creare SPA (Single Page Applications) con il nostro linguaggio preferito, programmando quindi applicazioni web direttamente in Nim. La peculiarità di queste applicazioni è che vengono eseguite totalmente lato browser, per cui possono essere servite da un semplice file HTML statico.</description></item></channel></rss>